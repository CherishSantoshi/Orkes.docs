"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3579],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,k=d["".concat(s,".").concat(m)]||d[m]||c[m]||i;return n?a.createElement(k,o(o({ref:t},u),{},{components:n})):a.createElement(k,o({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1822:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return u},default:function(){return d}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],l={sidebar_position:1},s="Switch",p={unversionedId:"reference-docs/switch-task",id:"reference-docs/switch-task",isDocsHomePage:!1,title:"Switch",description:"`json",source:"@site/docs/reference-docs/switch-task.md",sourceDirName:"reference-docs",slug:"/reference-docs/switch-task",permalink:"/content/docs/reference-docs/switch-task",editUrl:"https://github.com/orkes-io/docs/edit/main/docs/reference-docs/switch-task.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"referenceDocsSideBar",previous:{title:"Event Task",permalink:"/content/docs/reference-docs/system-tasks/event-task"},next:{title:"Do While",permalink:"/content/docs/reference-docs/do-while-task"}},u=[{value:"Introduction",id:"introduction",children:[]},{value:"Use Cases",id:"use-cases",children:[]},{value:"Configuration",id:"configuration",children:[]},{value:"Examples",id:"examples",children:[]}],c={toc:u};function d(e){var t=e.components,l=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},c,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"switch"},"Switch"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'"type" : "SWITCH"\n')),(0,i.kt)("h3",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"A switch task is similar to ",(0,i.kt)("inlineCode",{parentName:"p"},"case...switch")," statement in a programming language. The ",(0,i.kt)("inlineCode",{parentName:"p"},"switch")," expression, is\na configuration on the ",(0,i.kt)("inlineCode",{parentName:"p"},"SWITCH")," task type. Currently, two evaluators are supported:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"name"),(0,i.kt)("th",{parentName:"tr",align:null},"description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"value-param"),(0,i.kt)("td",{parentName:"tr",align:null},"Use a parameter directly as the value")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"javascript"),(0,i.kt)("td",{parentName:"tr",align:null},"Evaluate Javascript expressions and compute value")))),(0,i.kt)("h3",{id:"use-cases"},"Use Cases"),(0,i.kt)("p",null,"Useful in any situation where we have to execute one of many task options."),(0,i.kt)("h3",{id:"configuration"},"Configuration"),(0,i.kt)("p",null,"Following are the task configuration parameters :"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"name"),(0,i.kt)("th",{parentName:"tr",align:null},"type"),(0,i.kt)("th",{parentName:"tr",align:null},"description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"evaluatorType"),(0,i.kt)("td",{parentName:"tr",align:null},"String"),(0,i.kt)("td",{parentName:"tr",align:null},"Type of the evaluator used. Supported types: ",(0,i.kt)("inlineCode",{parentName:"td"},"value-param"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"javascript"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"expression"),(0,i.kt)("td",{parentName:"tr",align:null},"String"),(0,i.kt)("td",{parentName:"tr",align:null},"Expression that depends on the evaluator type. For ",(0,i.kt)("inlineCode",{parentName:"td"},"value-param")," evaluator, expression is input parameter, for ",(0,i.kt)("inlineCode",{parentName:"td"},"javascript")," evaluator, it is the javascript expression.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"decisionCases"),(0,i.kt)("td",{parentName:"tr",align:null},"Map[String, List","[task]","]"),(0,i.kt)("td",{parentName:"tr",align:null},"Map where key is possible values that can result from ",(0,i.kt)("inlineCode",{parentName:"td"},"expression")," being evaluated by ",(0,i.kt)("inlineCode",{parentName:"td"},"evaluatorType")," with value being list of tasks to be executed.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"defaultCase"),(0,i.kt)("td",{parentName:"tr",align:null},"List","[task]"),(0,i.kt)("td",{parentName:"tr",align:null},"List of tasks to be executed when no matching value if found in decision case (default condition)")))),(0,i.kt)("h4",{id:"output"},"Output"),(0,i.kt)("p",null,"Following is/are output generated by the ",(0,i.kt)("inlineCode",{parentName:"p"},"Switch")," Task."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"name"),(0,i.kt)("th",{parentName:"tr",align:null},"type"),(0,i.kt)("th",{parentName:"tr",align:null},"description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"evaluationResult"),(0,i.kt)("td",{parentName:"tr",align:null},"List","[String]"),(0,i.kt)("td",{parentName:"tr",align:null},"A List of string representing the list of cases that matched.")))),(0,i.kt)("h3",{id:"examples"},"Examples"),(0,i.kt)("p",null,"In this example workflow, we have to ship a package with the shipping service providers on the basis of input provided\nwhile running the workflow."),(0,i.kt)("p",null,"Let's create a Workflow with the following switch task definition that uses ",(0,i.kt)("inlineCode",{parentName:"p"},"value-param")," evaluatorType:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "switch_task",\n  "taskReferenceName": "switch_task",\n  "inputParameters": {\n    "switchCaseValue": "${workflow.input.service}"\n  },\n  "type": "SWITCH",\n  "evaluatorType": "value-param",\n  "expression": "switchCaseValue",\n  "defaultCase": [\n    {\n      ...\n    }\n  ],\n  "decisionCases": {\n    "fedex": [\n      {\n        ...\n      }\n    ],\n    "ups": [\n      {\n        ...\n      }\n    ]\n  }\n}\n')),(0,i.kt)("p",null,"In the definition above the value of the parameter ",(0,i.kt)("inlineCode",{parentName:"p"},"switch_case_value"),"\nis used to determine the switch-case. The evaluator type is ",(0,i.kt)("inlineCode",{parentName:"p"},"value-param")," and the expression is a direct reference to\nthe name of an input parameter. If the value of ",(0,i.kt)("inlineCode",{parentName:"p"},"switch_case_value")," is ",(0,i.kt)("inlineCode",{parentName:"p"},"fedex")," then the decision case ",(0,i.kt)("inlineCode",{parentName:"p"},"ship_via_fedex"),"is\nexecuted as shown below."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Conductor UI - Workflow Run",src:n(9641).Z})),(0,i.kt)("p",null,"In a similar way - if the input was ",(0,i.kt)("inlineCode",{parentName:"p"},"ups"),", then ",(0,i.kt)("inlineCode",{parentName:"p"},"ship_via_ups")," will be executed. If none of the cases match then the\ndefault option is executed."),(0,i.kt)("p",null,"Here is an example using the ",(0,i.kt)("inlineCode",{parentName:"p"},"javascript")," evaluator type:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "switch_task",\n  "taskReferenceName": "switch_task",\n  "inputParameters": {\n    "inputValue": "${workflow.input.service}"\n  },\n  "type": "SWITCH",\n  "evaluatorType": "javascript",\n  "expression": "$.inputValue == \'fedex\' ? \'fedex\' : \'ups\'",\n  "defaultCase": [\n    {\n      ...\n    }\n  ],\n  "decisionCases": {\n    "fedex": [\n      {\n        ...\n      }\n    ],\n    "ups": [\n      {\n        ...\n      }\n    ]\n  }\n}\n')))}d.isMDXComponent=!0},9641:function(e,t,n){t.Z=n.p+"assets/images/Switch_Fedex-27e566c73140df1bde439e60eaa2dd05.png"}}]);