"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5893],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),f=s(n),d=o,m=f["".concat(c,".").concat(d)]||f[d]||p[d]||a;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},4709:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return u},default:function(){return f}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],l={sidebar_position:1},c="Starting Workflow Executions",s={unversionedId:"how-tos/starting-workflows",id:"how-tos/starting-workflows",isDocsHomePage:!1,title:"Starting Workflow Executions",description:"Workflow executions can be started by using the following API:",source:"@site/docs/how-tos/starting-workflows.md",sourceDirName:"how-tos",slug:"/how-tos/starting-workflows",permalink:"/content/docs/how-tos/starting-workflows",editUrl:"https://github.com/orkes-io/docs/edit/main/docs/how-tos/starting-workflows.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"howtoSideBar",previous:{title:"Conductor How-Tos",permalink:"/content/docs/how-tos"},next:{title:"Searching Workflows",permalink:"/content/docs/how-tos/searching-workflows"}},u=[{value:"Using Client SDKs",id:"using-client-sdks",children:[]},{value:"Example using curl",id:"example-using-curl",children:[]},{value:"Example using node fetch",id:"example-using-node-fetch",children:[]}],p={toc:u};function f(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"starting-workflow-executions"},"Starting Workflow Executions"),(0,a.kt)("p",null,"Workflow executions can be started by using the following API:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-http",metastring:"request",request:!0},"POST /api/workflow/{name}\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"{name}")," is the placeholder for workflow name. The POST API body is your workflow input parameters which can be empty if\nthere are none."),(0,a.kt)("h3",{id:"using-client-sdks"},"Using Client SDKs"),(0,a.kt)("p",null,"Conductor offers client SDKs for popular languages which has library methods that can be used to make this API call.\nRefer to the SDK documentation to configure a client in your selected language to invoke workflow executions."),(0,a.kt)("h3",{id:"example-using-curl"},"Example using curl"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"curl 'https://localhost:8080/api/workflow/sample_workflow' \\\n  -H 'accept: text/plain' \\\n  -H 'content-type: application/json' \\\n  --data-raw '{\"service\":\"fedex\"}'\n")),(0,a.kt)("p",null,"In this example we are specifying one input param called ",(0,a.kt)("inlineCode",{parentName:"p"},"service")," with a value of ",(0,a.kt)("inlineCode",{parentName:"p"},"fedex")," and the name of the workflow\nis ",(0,a.kt)("inlineCode",{parentName:"p"},"sample_workflow")),(0,a.kt)("h3",{id:"example-using-node-fetch"},"Example using node fetch"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'fetch("https://localhost:8080/api/workflow/sample_workflow", {\n    "headers": {\n        "accept": "text/plain",\n        "content-type": "application/json",\n    },\n    "body": "{\\"service\\":\\"fedex\\"}",\n    "method": "POST",\n});\n')))}f.isMDXComponent=!0}}]);