"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1016],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),k=c(n),f=r,m=k["".concat(l,".").concat(f)]||k[f]||p[f]||i;return n?a.createElement(m,o(o({ref:t},u),{},{components:n})):a.createElement(m,o({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=k;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},2266:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return k}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],s={sidebar_position:13},l="Kafka Publish Task",c={unversionedId:"reference-docs/system-tasks/kafka-publish-task",id:"reference-docs/system-tasks/kafka-publish-task",isDocsHomePage:!1,title:"Kafka Publish Task",description:"`json",source:"@site/docs/reference-docs/system-tasks/kafka-publish-task.md",sourceDirName:"reference-docs/system-tasks",slug:"/reference-docs/system-tasks/kafka-publish-task",permalink:"/content/docs/reference-docs/system-tasks/kafka-publish-task",editUrl:"https://github.com/orkes-io/docs/edit/main/docs/reference-docs/system-tasks/kafka-publish-task.md",tags:[],version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13},sidebar:"referenceDocsSideBar",previous:{title:"JSON JQ Transform Task",permalink:"/content/docs/reference-docs/system-tasks/json-jq-transform-task"},next:{title:"Event Task",permalink:"/content/docs/reference-docs/system-tasks/event-task"}},u=[{value:"Introduction",id:"introduction",children:[]},{value:"Use Cases",id:"use-cases",children:[]},{value:"Configuration",id:"configuration",children:[]},{value:"Examples",id:"examples",children:[]}],p={toc:u};function k(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"kafka-publish-task"},"Kafka Publish Task"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'"type" : "KAFKA_PUBLISH"\n')),(0,i.kt)("h3",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"A Kafka Publish task is used to push messages to another microservice via Kafka."),(0,i.kt)("h3",{id:"use-cases"},"Use Cases"),(0,i.kt)("h3",{id:"configuration"},"Configuration"),(0,i.kt)("p",null,"Kafka Publish task is defined directly inside the workflow with\n",(0,i.kt)("inlineCode",{parentName:"p"},'"type":"KAFKA_PUBLISH"'),"."),(0,i.kt)("h3",{id:"examples"},"Examples"),(0,i.kt)("p",null,"Sample Task "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "call_kafka",\n  "taskReferenceName": "call_kafka",\n  "inputParameters": {\n    "kafka_request": {\n      "topic": "userTopic",\n      "value": "Message to publish",\n      "bootStrapServers": "localhost:9092",\n      "headers": {\n    "x-Auth":"Auth-key"    \n      },\n      "key": "123",\n      "keySerializer": "org.apache.kafka.common.serialization.IntegerSerializer"\n    }\n  },\n  "type": "KAFKA_PUBLISH"\n}\n')),(0,i.kt)("p",null,"The task expects an input parameter named ",(0,i.kt)("inlineCode",{parentName:"p"},'"kafka_request"')," as part\nof the task's input with the following details:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},'"bootStrapServers"')," - bootStrapServers for connecting to given kafka."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},'"key"')," - Key to be published."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},'"keySerializer"')," - Serializer used for serializing the key published to kafka.\nOne of the following can be set :\na. org.apache.kafka.common.serialization.IntegerSerializer\nb. org.apache.kafka.common.serialization.LongSerializer\nc. org.apache.kafka.common.serialization.StringSerializer.\nDefault is String serializer."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},'"value"')," - Value published to kafka"),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},'"requestTimeoutMs"')," - Request timeout while publishing to kafka.\nIf this value is not given the value is read from the property\nkafka.publish.request.timeout.ms. If the property is not set the value\ndefaults to 100 ms."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},'"maxBlockMs"')," - maxBlockMs while publishing to kafka. If this value is\nnot given the value is read from the property kafka.publish.max.block.ms.\nIf the property is not set the value defaults to 500 ms."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},'"headers"')," - A map of additional kafka headers to be sent along with\nthe request."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},'"topic"')," - Topic to publish.")),(0,i.kt)("p",null,"The producer created in the kafka task is cached. By default\nthe cache size is 10 and expiry time is 120000 ms. To change the\ndefaults following can be modified\nkafka.publish.producer.cache.size,\nkafka.publish.producer.cache.time.ms respectively."),(0,i.kt)("h4",{id:"kafka-task-output"},"Kafka Task Output"),(0,i.kt)("p",null,"Task status transitions to ",(0,i.kt)("inlineCode",{parentName:"p"},"COMPLETED"),"."),(0,i.kt)("p",null,"The task is marked as ",(0,i.kt)("inlineCode",{parentName:"p"},"FAILED")," if the message could not be published to\nthe Kafka queue."))}k.isMDXComponent=!0}}]);